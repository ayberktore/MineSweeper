package MineSweeper;

import java.util.Random;
import java.util.Scanner;

public class MineSweeper {

    Scanner scan =new Scanner(System.in);
    Random random = new Random();
    int rowNumber;
    int colNumber;
    String[][] board;
    boolean[][] map;
    int size;

    MineSweeper(int rowNumber,int colNumber)
    {
        System.out.println("MAYIN TARLASI OYUNUNA HOŞGELDİNİZ");
        this.rowNumber=rowNumber;
        this.colNumber=colNumber;
        this.map=new boolean[rowNumber][colNumber];
        this.board=new String[rowNumber][colNumber];
        this.size=rowNumber*colNumber;
    }

    public void prepareGame() {

        int count = 0;
        while (count < size / 4) {
            int randomRow = random.nextInt(rowNumber);
            int randomCol = random.nextInt(colNumber);

            if (map[randomRow][randomCol] != true) {
                map[randomRow][randomCol] = true;
                count++;
            }
        }
        // Mayın Olmayan Yerleri Doldurma İşlemi
        for(int i=0;i< map.length;i++)
        {
            for(int j=0;j<map[0].length;j++)
            {
                if(map[i][j]!=true)
                    map[i][j]=false;
            }
        }
        // String Dizisini Yapma İşlemi
        for(int i=0;i< board.length;i++)
        {
            for(int j=0;j<board[0].length;j++)
            {
                board[i][j]="-";
            }
        }



    }
    public void print(String[][] arr)
    {
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[0].length;j++)
            {
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }
    }
    public void print(boolean[][] arr){
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[0].length;j++)
            {
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }
    }
    public void select(String[][] arr)
    {
        int isaretSayisi=0;
        while(isaretSayisi<=(size-(size/4))) {
            print(board);
            System.out.println("Satir Girin    :");
            int hamleSatir = scan.nextInt();
            System.out.println("Sutun Girin    :");
            int hamleSutun = scan.nextInt();

            while ((hamleSatir < 0 || hamleSatir > rowNumber - 1) || (hamleSutun < 0 || hamleSutun > colNumber - 1)) {
                System.out.println("Lutfen Gecerli Hamle Yapınız");
                System.out.println("Satir Girin    :");
                hamleSatir = scan.nextInt();
                System.out.println("Sutun Girin    :");
                hamleSutun = scan.nextInt();
            }
            if (map[hamleSatir][hamleSutun] != true) {
                int counter = 0;


                if (hamleSatir - 1 < 0) {                                                                          // SATIR SIFIR OLACAK SUTUN 0-3 ARASI OLACAK

                    if (hamleSutun - 1 < 0)                                           // [0][0] BAŞLANGIÇ
                    {
                        if (map[hamleSatir][hamleSutun + 1] == true) // [0][0]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun] == true) // [1][0]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun + 1] == true) // [1][1]
                            counter++;
                    } else if (hamleSutun + 1 > this.colNumber - 1)                           // [0][3] BASLANGIC
                    {
                        if (map[hamleSatir][hamleSutun - 1] == true) // [0][2]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun - 1] == true) // [1][2]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun] == true) // [1][3]
                            counter++;
                    } else                                                              // [0][1] -[0][2] BASLANGIC
                    {
                        if (map[hamleSatir][hamleSutun - 1] == true) //[0]][0]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun - 1] == true) // [1][0]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun] == true) // [1][1]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun + 1] == true) // [1][2]
                            counter++;
                        if (map[hamleSatir][hamleSutun + 1] == true)    // [0][2]
                            counter++;
                    }
                } else if (hamleSatir > 0 && hamleSatir + 1 < rowNumber - 1)                                                       //SATIR 1 VE 2 OLACAK
                {
                    if (hamleSutun - 1 < 0) {                                          // [1][0]-[2][0] BASŞLANGIÇ

                        if (map[hamleSatir - 1][hamleSutun] == true)       //[0][[0]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun + 1] == true)    //[0][1]
                            counter++;
                        if (map[hamleSatir][hamleSutun + 1] == true)   // [1][1]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun] == true)   //[2][0]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun + 1] == true) // [2][1]
                            counter++;
                    } else if (hamleSutun + 1 > colNumber - 1)            //              BASLANGIC  [1][3] [2][3]
                    {
                        if (map[hamleSatir - 1][hamleSutun] == true)       //[0][[3]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun - 1] == true)    //[0][2]
                            counter++;
                        if (map[hamleSatir][hamleSutun - 1] == true)   // [1][2]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun - 1] == true)   //[2][2]
                            counter++;
                        if (map[hamleSatir + 1][hamleSutun] == true) // [2][3]
                            counter++;
                    }
                } else if (hamleSutun > 0 && hamleSutun + 1 < colNumber - 1)  //          [1][1] [1][2] [2][1] [2][2  ]BASLANGIC
                {
                    if (map[hamleSatir - 1][hamleSutun - 1] == true)     // [0][0]
                        counter++;
                    if (map[hamleSatir - 1][hamleSutun] == true)     //  [0][1]
                        counter++;
                    if (map[hamleSatir - 1][hamleSutun + 1] == true)  //    [0][2]
                        counter++;
                    if (map[hamleSatir][hamleSutun - 1] == true)   //    [1][0]
                        counter++;
                    if (map[hamleSatir][hamleSutun + 1] == true)    //    [1][2]
                        counter++;
                    if (map[hamleSatir + 1][hamleSutun - 1] == true) //    [2][0]
                        counter++;
                    if (map[hamleSatir + 1][hamleSutun] == true)  //    [2][1]
                        counter++;
                    if (map[hamleSatir + 1][hamleSutun + 1] == true)  //   [2][2]
                        counter++;
                } else if (hamleSatir + 1 > rowNumber - 1)                                                                             // SATIR 3 OLACAK
                {

                    if (hamleSutun - 1 < 0)                                         //  [3][0] BASLANGIC
                    {
                        if (map[hamleSatir][hamleSutun + 1] == true)  //[3][1]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun + 1] == true)  // [2][1]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun] == true) // [2][0]
                            counter++;
                    } else if (hamleSutun + 1 > this.colNumber - 1) {                            // [3][3] BASLANGIC

                        if (map[hamleSatir][hamleSutun - 1] == true)   //[3][2]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun - 1] == true) // [2][2]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun] == true) // [2][3]
                            counter++;
                    } else if (hamleSutun + 1 < colNumber - 1)                                    //[3][1] [3][2] BASLANGIC
                    {
                        if (map[hamleSatir][hamleSutun - 1] == true)    //[3][0]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun - 1] == true) // [2][0]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun] == true)  //[2][1]
                            counter++;
                        if (map[hamleSatir - 1][hamleSutun + 1] == true) //[2][2]
                            counter++;
                        if (map[hamleSatir][hamleSutun + 1] == true) //[3][2]
                            counter++;
                    }
                }

                board[hamleSatir][hamleSutun] = Integer.toString(counter);
                isaretSayisi++;
                if (isaretSayisi == (size - (size / 4))) {
                    System.out.println("Oyunu Kazandınız");
                    break;
            }

            
        }
            else
            {
                System.out.println("GAME OVER");
                break;
            }
        }

    }
    public void run()
    {
        prepareGame();
        System.out.println("MAYINLARIN KONUMU");
        print(map);
        System.out.println();
        select(board);

    }

}
